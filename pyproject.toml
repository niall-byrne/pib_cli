
[build-system]
  build-backend = "poetry.core.masonry.api"
  requires = ["setuptools","poetry-core>=1.0.0"]

[tool]

  [tool.coverage]

    [tool.coverage.report]
      exclude_lines = ["nocover"]
      ignore_errors = true
      precision = 1
      show_missing = true

    [tool.coverage.run]
      branch = true
      omit = ["*/test*","setup.py"]
      source = ["."]

  [tool.isort]
    default_section = "FIRSTPARTY"
    include_trailing_comma = true
    indent = "    "
    length_sort = false
    line_length = 80
    multi_line_output = 3
    no_lines_before = ""
    sections = "FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"
    skip_glob = "*_pb2.py"

  [tool.poetry]
    authors = ["Niall Byrne <niall@niallbyrne.ca>"]
    description = "Python Development CLI"
    documentation = "https://github.com/niall-byrne/pib_cli/blob/develop/README.md"
    exclude = ["**/tests/*","**/*.sh"]
    homepage = "https://github.com/niall-byrne/pib_cli"
    include = []
    keywords = []
    license = "MPL-2.0"
    name = "pib_cli"
    readme = "README.md"
    repository = "https://github.com/niall-byrne/pib_cli"
    version = "0.1.3"

    [tool.poetry.dependencies]
      PyYAML = "^5.4.1"
      bandit = "^1.7.0"
      click = "^8.0.1"
      commitizen = "^2.7.16"
      isort = "^5.8.0"
      jinja2 = ">=2.11.3,<4.0.0"
      jsonschema = "^3.2.0"
      pydocstyle = "^6.1.1"
      pylint = "^2.8.3"
      pytest = "^6.2.4"
      pytest-cov = "^2.12.1"
      pytest-pylint = "^0.18.0"
      python = ">=3.7.0,<4.0.0"
      safety = "^1.10.3"
      wheel = "^0.36.2"
      yamllint = "^1.25.0"
      yapf = "^0.31.0"

      [tool.poetry.dependencies.mypy]
        optional = true
        version = "^0.902"

      [tool.poetry.dependencies.sphinx]
        optional = true
        version = "^4.0.2"

      [tool.poetry.dependencies.sphinx-autopackagesummary]
        optional = true
        version = "^1.3"

      [tool.poetry.dependencies.sphinx-click]
        optional = true
        version = "^3.0.0"

      [tool.poetry.dependencies.sphinx-jsonschema]
        optional = true
        version = "^1.16.8"

    [tool.poetry.extras]
      docs = ["Sphinx","sphinx-autopackagesummary"]
      pib_docs = ["Sphinx","sphinx-click","sphinx-autopackagesummary","sphinx-jsonschema"]
      types = ["mypy"]

    [[tool.poetry.packages]]
      include = "pib_cli"

    [tool.poetry.scripts]
      dev = "pib_cli.cli:cli"
      pib_cli = "pib_cli.cli:cli"

  [tool.pylint]

    [tool.pylint.basic]
      argument-rgx = "[a-z_][a-z0-9_]{1,30}$|^pk$"
      attr-rgx = "[a-z_][a-z0-9_]{2,30}$"
      bad-functions = "map,filter,apply,input"
      bad-names = "foo,bar,baz,toto,tutu,tata"
      class-attribute-rgx = "([A-Za-z_][A-Za-z0-9_]{2,30}|(__.*__))$"
      class-rgx = "[A-Z_][a-zA-Z0-9]+$"
      const-rgx = "(([A-Z_][A-Z0-9_]*)|(__.*__))$|^urls$|^app$|^User$|^router$"
      docstring-min-length = "-1"
      function-rgx = "[A-Za-z_][A-Za-z0-9_]{2,40}$"
      good-names = "i,j,k,ex,Run,_"
      inlinevar-rgx = "[A-Za-z_][A-Za-z0-9_]*$"
      method-rgx = "[A-Za-z_][A-Za-z0-9_]{2,50}$"
      module-rgx = "(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$"
      no-docstring-rgx = ".*"
      required-attributes = []
      variable-rgx = "[a-z_][a-z0-9_]{2,30}$|^pk$"

    [tool.pylint.classes]
      defining-attr-methods = "__init__,__new__,setUp"
      ignore-iface-methods = "isImplementedBy,deferred,extends,names,namesAndDescriptions,queryDescriptionFor,getBases,getDescriptionFor,getDoc,getName,getTaggedValue,getTaggedValueTags,isEqualOrExtendedBy,setTaggedValue,isImplementedByInstancesOf,adaptWith,is_implemented_by"
      valid-classmethod-first-arg = "cls"
      valid-metaclass-classmethod-first-arg = "mcs"

    [tool.pylint.design]
      ignored-argument-names = "_.*"
      max-args = 5
      max-attributes = 7
      max-branches = 12
      max-locals = 15
      max-parents = 10
      max-public-methods = 200
      max-returns = 6
      max-statements = 50
      min-public-methods = 2

    [tool.pylint.exceptions]
      overgeneral-exceptions = "Exception"

    [tool.pylint.format]
      ignore-long-lines = "^\\s*(# )?<?https?://\\S+>?$"
      indent-string = "  "
      max-line-length = 80
      max-module-lines = 1000
      no-space-check = "trailing-comma,dict-separator"
      single-line-if-stmt = "no"

    [tool.pylint.imports]
      deprecated-modules = "regsub,TERMIOS,Bastion,rexec"
      ext-import-graph = ""
      import-graph = ""
      int-import-graph = ""

    [tool.pylint.master]
      ignore = ""
      ignore-patterns = ".*_pb2.py"
      load-plugins = ""
      persistent = "yes"
      profile = "no"

    [tool.pylint.message_control]
      disable = "similarities,locally-disabled,fixme,too-few-public-methods,bad-continuation,C0411,E5901,E1101,R0201"

    [tool.pylint.miscellaneous]
      notes = "FIXME,XXX,TODO"

    [tool.pylint.reports]
      comment = "no"
      evaluation = "10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)"
      files-output = "no"
      output-format = "text"
      reports = "no"

    [tool.pylint.similarities]
      ignore-comments = "yes"
      ignore-docstrings = "yes"
      ignore-imports = "no"
      min-similarity-lines = 40

    [tool.pylint.typecheck]
      generated-members = "REQUEST,acl_users,aq_parent"
      ignore-mixin-members = "yes"
      ignored-classes = "SQLObject"
      zope = "no"

    [tool.pylint.variables]
      additional-builtins = ""
      dummy-variables-rgx = "_$|dummy"
      init-import = "no"

  [tool.pytest]

    [tool.pytest.ini_options]
      testpaths = ["pib_cli"]
